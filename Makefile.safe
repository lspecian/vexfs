# Safe Makefile for VexFS kernel module - VM Testing Only
# This builds the SAFE version without FFI to prevent system hangs

# Variables
KERNEL_DIR ?= /lib/modules/$(shell uname -r)/build
MODULE_NAME = vexfs
SAFE_MODULE_NAME = vexfs_safe

# Default target for safe testing
default: safe-build

# Safe build: C-only module without FFI calls
safe-build: clean-safe
	@echo "üõ°Ô∏è  Building SAFE VexFS kernel module (no FFI)..."
	@echo "This version prevents system hangs by avoiding Rust FFI calls"
	@cp kernel/vexfs_module_entry_safe.c kernel/vexfs_module_entry.c.backup 2>/dev/null || true
	@cp kernel/vexfs_module_entry_safe.c kernel/vexfs_module_entry.c
	$(MAKE) -C $(KERNEL_DIR) M=$(PWD) VEXFS_SAFE_MODE=1 modules
	@mv vexfs.ko vexfs_safe.ko 2>/dev/null || true
	@echo "‚úÖ SAFE build complete: vexfs_safe.ko ready"
	@echo "‚ö†Ô∏è  This module can be loaded/unloaded but mounting may still have issues"

# Restore original module after safe build
restore-original:
	@echo "üîÑ Restoring original kernel module..."
	@if [ -f "kernel/vexfs_module_entry.c.backup" ]; then \
		mv kernel/vexfs_module_entry.c.backup kernel/vexfs_module_entry.c; \
		echo "‚úÖ Original module restored"; \
	else \
		echo "‚ö†Ô∏è  No backup found - original may already be in place"; \
	fi

# Clean safe build artifacts
clean-safe:
	@echo "üßπ Cleaning safe build artifacts..."
	rm -f vexfs_safe.ko *.o *.mod *.mod.c .*.cmd
	rm -rf .tmp_versions Module.symvers modules.order
	@echo "‚úÖ Safe build artifacts cleaned"

# Test the safe module (load/unload only)
test-safe: safe-build
	@echo "üß™ Testing SAFE VexFS module (load/unload only)..."
	@if [ ! -f "vexfs_safe.ko" ]; then \
		echo "‚ùå vexfs_safe.ko not found - build failed"; \
		exit 1; \
	fi
	@echo "‚úÖ Safe module built successfully"
	@echo "‚ö†Ô∏è  Use test_env/safe_kernel_test.sh for safe testing"
	@echo "‚ö†Ô∏è  DO NOT attempt mounting - will cause hangs"

# Help for safe building
help-safe:
	@echo "VexFS Safe Build System"
	@echo "======================"
	@echo ""
	@echo "Safe Commands (prevent system hangs):"
	@echo "  safe-build       - Build safe kernel module (no FFI)"
	@echo "  test-safe        - Build and verify safe module"
	@echo "  clean-safe       - Clean safe build artifacts"
	@echo "  restore-original - Restore original module source"
	@echo ""
	@echo "‚ö†Ô∏è  CRITICAL SAFETY NOTES:"
	@echo "  - Safe module prevents FFI-related hangs"
	@echo "  - Loading/unloading should work safely"
	@echo "  - Mounting may still cause issues"
	@echo "  - Only test in VMs, never on host systems"
	@echo ""
	@echo "Testing Protocol:"
	@echo "  1. make safe-build"
	@echo "  2. Run test_env/safe_kernel_test.sh in VM"
	@echo "  3. DO NOT attempt mounting until FFI is fixed"

.PHONY: default safe-build restore-original clean-safe test-safe help-safe