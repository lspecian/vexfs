# Perf Configuration for VexFS FUSE Memory Profiling
# Task 23.1: Memory usage analysis and stack optimization

# Event selection for memory analysis
events = cycles,instructions,cache-references,cache-misses,page-faults,context-switches

# Memory-specific events
memory_events = mem-loads,mem-stores,mem-loads-aux,mem-stores-aux

# Stack sampling configuration
call_graph = dwarf,16384
stack_size = 16384

# Sampling frequency
frequency = 1000

# Record configuration
record_options = --call-graph=dwarf --max-stack=127 --sample-cpu

# Memory bandwidth monitoring
memory_bandwidth = true
numa_topology = true

# Cache analysis
cache_events = L1-dcache-loads,L1-dcache-load-misses,L1-dcache-stores,L1-dcache-store-misses,L1-icache-loads,L1-icache-load-misses,LLC-loads,LLC-load-misses,LLC-stores,LLC-store-misses

# Branch prediction analysis
branch_events = branches,branch-misses,branch-loads,branch-load-misses

# Memory allocation tracking
malloc_events = syscalls:sys_enter_mmap,syscalls:sys_exit_mmap,syscalls:sys_enter_munmap,syscalls:sys_exit_munmap,syscalls:sys_enter_brk,syscalls:sys_exit_brk

# FUSE-specific syscall tracking
fuse_events = syscalls:sys_enter_read,syscalls:sys_exit_read,syscalls:sys_enter_write,syscalls:sys_exit_write,syscalls:sys_enter_openat,syscalls:sys_exit_openat,syscalls:sys_enter_close,syscalls:sys_exit_close

# Stack overflow detection events
stack_events = probe:vexfs_fuse:*,probe:fuse:*

# Output configuration
output_file = results/perf/vexfs_fuse_memory_profile.data
report_file = results/perf/vexfs_fuse_memory_report.txt

# Annotation settings
annotate = true
source_annotation = true
assembly_annotation = true

# Symbol resolution
symbol_resolution = true
kernel_symbols = true
user_symbols = true

# Filtering
pid_filter = 
comm_filter = vexfs_fuse

# Advanced memory analysis
memory_sampling = true
data_page_size = 4096
code_page_size = 4096

# Performance counters
pmu_events = cpu/mem-loads/,cpu/mem-stores/,cpu/cache-references/,cpu/cache-misses/

# Stack unwinding
unwind_method = dwarf
max_stack_depth = 127
skip_kernel = false

# Memory pressure monitoring
memory_pressure_events = vmscan:mm_vmscan_direct_reclaim_begin,vmscan:mm_vmscan_direct_reclaim_end,vmscan:mm_vmscan_kswapd_wake,vmscan:mm_vmscan_kswapd_sleep

# NUMA analysis
numa_events = migrate:mm_migrate_pages,migrate:mm_numa_migrate_ratelimit

# Memory bandwidth events (Intel specific)
intel_memory_events = uncore_imc/data_reads/,uncore_imc/data_writes/,uncore_imc/cas_count_read/,uncore_imc/cas_count_write/

# Memory latency analysis
memory_latency_events = mem-loads-aux,mem-stores-aux

# TLB analysis
tlb_events = dTLB-loads,dTLB-load-misses,dTLB-stores,dTLB-store-misses,iTLB-loads,iTLB-load-misses

# Process monitoring
process_events = sched:sched_process_fork,sched:sched_process_exec,sched:sched_process_exit

# File system events
fs_events = ext4:ext4_da_write_begin,ext4:ext4_da_write_end,ext4:ext4_sync_file_enter,ext4:ext4_sync_file_exit

# Memory allocation size tracking
allocation_size_events = kmem:kmalloc,kmem:kfree,kmem:kmem_cache_alloc,kmem:kmem_cache_free

# Stack growth monitoring
stack_growth_events = probe:do_page_fault,probe:expand_stack

# Real-time monitoring settings
real_time = true
buffer_size = 128
watermark = 90

# Output format
output_format = perf_data
compression = lz4

# Profiling duration and intervals
duration = 300
interval = 1000

# CPU affinity
cpu_list = all

# Privilege settings
allow_kernel = true
allow_user = true

# Error handling
continue_on_error = true
max_errors = 100

# Debugging
debug = false
verbose = 1