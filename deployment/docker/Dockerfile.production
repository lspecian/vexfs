# VexFS Production Server - Multi-stage build with security hardening
# This Dockerfile creates a production-ready VexFS server container

# Build stage
FROM rust:1.80-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./

# Create a dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies (this layer will be cached)
RUN cargo build --release --features server --bin vexfs_server

# Remove dummy source
RUN rm -rf src

# Copy actual source code
COPY src ./src

# Build the actual application
RUN cargo build --release --features server --bin vexfs_server

# Verify binary exists and is executable
RUN ls -la target/release/vexfs_server && \
    file target/release/vexfs_server

# Runtime stage - using distroless for minimal attack surface
FROM gcr.io/distroless/cc-debian12:latest

# Copy CA certificates from builder
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Create necessary directories with proper permissions
USER 65534:65534

# Copy the binary from builder stage
COPY --from=builder --chown=65534:65534 /app/target/release/vexfs_server /usr/local/bin/vexfs_server

# Expose port (non-privileged)
EXPOSE 8000

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD ["/usr/local/bin/vexfs_server", "--health-check"] || exit 1

# Environment variables for production
ENV RUST_LOG=info \
    RUST_BACKTRACE=1 \
    PORT=8000 \
    VEXFS_DATA_DIR=/data \
    VEXFS_LOG_LEVEL=info \
    VEXFS_METRICS_ENABLED=true \
    VEXFS_HEALTH_CHECK_ENABLED=true

# Create data directory
VOLUME ["/data"]

# Security labels
LABEL security.non-root=true \
      security.no-new-privileges=true \
      org.opencontainers.image.title="VexFS Production Server" \
      org.opencontainers.image.description="Production-ready VexFS server with security hardening" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.vendor="VexFS Contributors" \
      org.opencontainers.image.licenses="Apache-2.0"

# Run as non-root user (distroless nobody user)
USER 65534:65534

# Start the server
ENTRYPOINT ["/usr/local/bin/vexfs_server"]