[package]
name = "vexfs"
version = "1.0.0"
edition = "2021"
authors = ["VexFS Contributors"]
description = "Vector Extended File System - A filesystem optimized for vector embeddings and similarity search"
repository = "https://github.com/vexfs/vexfs"
license = "Apache-2.0"
readme = "README.md"
keywords = ["filesystem", "vector", "embeddings", "similarity-search", "kernel"]
categories = ["filesystem", "science", "data-structures"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Note: VexFS uses C FFI approach for kernel integration, not Rust-for-Linux

# Dependencies for no_std compatibility
hashbrown = { version = "0.14", default-features = false }
libm = { version = "0.2", default-features = false }
derivative = "2.2"

[dev-dependencies]
fastrand = "2.0"
chrono = { version = "0.4", features = ["serde"] }

[lib]
crate-type = ["staticlib"]
path = "src/lib.rs"

# Test binaries
[[bin]]
name = "comprehensive_test_runner"
path = "src/bin/comprehensive_test_runner.rs"

[[bin]]
name = "vector_test_runner"
path = "src/bin/vector_test_runner.rs"

[[bin]]
name = "vector_cache_benchmark"
path = "src/bin/vector_cache_benchmark.rs"

[profile.release]
panic = "abort"
opt-level = 2
lto = true

[profile.dev]
panic = "abort"
opt-level = 0

# Features for conditional compilation
[features]
default = ["std"]
std = []
kernel = []  # Keep for future RfL approach but disabled
c_bindings = []  # New feature for current C FFI approach